{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ExchangeRateService = /*#__PURE__*/(() => {\n  class ExchangeRateService {\n    constructor(http) {\n      this.http = http;\n      this.apiServerUrl = environment.apiBaseUrl;\n    }\n\n    getExchangeRates() {\n      return this.http.get(`${this.apiServerUrl}/`, {\n        headers: new HttpHeaders().set('Authorization', `Bearer ` + localStorage.getItem('token'))\n      });\n    }\n\n    getCoins() {\n      return this.http.get(`${this.apiServerUrl}/coin`, {\n        headers: new HttpHeaders().set('Authorization', `Bearer ` + localStorage.getItem('token'))\n      });\n    }\n\n    createExchangeOperation(exchangeRate) {\n      return this.http.post(`${this.apiServerUrl}/`, exchangeRate, {\n        headers: new HttpHeaders().set('Authorization', `Bearer ` + localStorage.getItem('token'))\n      });\n    }\n\n    updExchangeRate(exchangeRate) {\n      return this.http.put(`${this.apiServerUrl}/`, exchangeRate, {\n        headers: new HttpHeaders().set('Authorization', `Bearer ` + localStorage.getItem('token'))\n      });\n    }\n\n    getToken(username, pwd) {\n      return this.http.post(`${this.apiServerUrl}/token`, {}, {\n        headers: new HttpHeaders().set('Authorization', `Basic ` + btoa(username + \":\" + pwd))\n      });\n    }\n\n  }\n\n  ExchangeRateService.ɵfac = function ExchangeRateService_Factory(t) {\n    return new (t || ExchangeRateService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ExchangeRateService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ExchangeRateService,\n    factory: ExchangeRateService.ɵfac,\n    providedIn: 'root'\n  });\n  return ExchangeRateService;\n})();","map":null,"metadata":{},"sourceType":"module"}